language: cpp
dist: trusty
sudo: required

matrix:
  include:

    # Linux C++14 GCC builds
    - os: linux
      compiler: gcc
      addons: &gcc7
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons: *gcc7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TYPE='Debug'

    - os: linux
      compiler: gcc
      addons: *gcc7
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" BUILD_TYPE='Debug' BUILD_TARGET='Coverage'
      
    - os: linux
      compiler: clang
      addons: &clang6
        apt:
          sources: ['llvm-toolchain-trusty-6.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-6.0', 'libstdc++-6-dev']
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0" BUILD_TYPE='Release'

    - os: linux
      compiler: clang
      addons: *clang6
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0" BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: MATRIX_EVAL="CC=clang && CXX=clang++" BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: MATRIX_EVAL="CC=clang && CXX=clang++" BUILD_TYPE='Release'

env:
  global:
    - CODECOV_TOKEN="b03a212d-cd86-4507-a1bc-56f97dea03bc"

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - if [[ ${TRAVIS_OS_NAME} == 'linux' ]]; then . .travis.linux; fi
  - if [[ ${TRAVIS_OS_NAME} == 'osx' ]]; then . .travis.osx; fi


before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -Wdev
  
script:
  - cmake --build ./build --target all -- -j 3
  - |-
    if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
      cmake --build ./build --target coverage
    else
      cd build
      ctest -VV
    fi
  
after_success:
- |-
  if [[ ${BUILD_TARGET} == 'Coverage' ]]; then
    coveralls -b ./build -e 3rd -e src/tests -i include -i src --gcov-options '\-lp';
    lcov --directory . --capture --output-file coverage.info
    lcov --remove coverage.info '/usr/*' --output-file coverage.info
    lcov --remove coverage.info "${PWD}/3rd/*" --output-file coverage.info
    lcov --remove coverage.info "${PWD}/src/tests/*" --output-file coverage.info
    bash <(curl -s https://codecov.io/bash)
  fi